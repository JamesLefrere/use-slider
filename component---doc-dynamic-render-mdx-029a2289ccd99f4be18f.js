(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"1MBm":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return f}));var i=n("Fcif"),o=n("6CzD"),r=n("+I+c"),a=n("/FXl"),c=n("TjRS"),u=n("mXGw"),d=n("ZFoC"),b=n("3re2"),l=(n("KeMV"),n("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"doc/dynamic-render.mdx"}});var s={_frontmatter:l},v=c.a;function f(e){var t,n,f=e.components,m=Object(r.a)(e,["components"]);return Object(a.b)(v,Object(i.a)({},s,m,{components:f,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"conditional-render"},"Conditional Render"),Object(a.b)(d.c,{__position:0,__code:"() => {\n  const [show, setShow] = useState(true)\n  const [ref] = useSlider()\n  return (\n    <>\n      <button onClick={() => setShow(!show)}>Toggle</button>\n      {show && (\n        <div ref={ref}>\n          <div>1</div>\n          <div>2</div>\n          <div>3</div>\n          <div>4</div>\n          <div>5</div>\n          <div>6</div>\n        </div>\n      )}\n    </>\n  )\n}",__scope:(t={props:m,DefaultLayout:c.a,useState:u.useState,Playground:d.c,useSlider:b.a},t.DefaultLayout=c.a,t._frontmatter=l,t),mdxType:"Playground"},(function(){var e=Object(u.useState)(!0),t=e[0],n=e[1],i=Object(b.a)()[0];return Object(a.b)(React.Fragment,null,Object(a.b)("button",{onClick:function(){return n(!t)}},"Toggle"),t&&Object(a.b)("div",{ref:i},Object(a.b)("div",null,"1"),Object(a.b)("div",null,"2"),Object(a.b)("div",null,"3"),Object(a.b)("div",null,"4"),Object(a.b)("div",null,"5"),Object(a.b)("div",null,"6")))})),Object(a.b)("h1",{id:"dynamic-list"},"Dynamic List"),Object(a.b)(d.c,{__position:1,__code:"() => {\n  const [list, setList] = useState([1, 2, 3, 4, 5])\n  const [ref] = useSlider({ navigation: true })\n  return (\n    <>\n      <button onClick={() => setList(prev => [...prev, prev.length + 1])}>\n        Add New Item\n      </button>\n      <div ref={ref}>\n        {list.map(item => (\n          <div key={item}>{item}</div>\n        ))}\n      </div>\n    </>\n  )\n}",__scope:(n={props:m,DefaultLayout:c.a,useState:u.useState,Playground:d.c,useSlider:b.a},n.DefaultLayout=c.a,n._frontmatter=l,n),mdxType:"Playground"},(function(){var e=Object(u.useState)([1,2,3,4,5]),t=e[0],n=e[1],i=Object(b.a)({navigation:!0})[0];return Object(a.b)(React.Fragment,null,Object(a.b)("button",{onClick:function(){return n((function(e){return[].concat(Object(o.a)(e),[e.length+1])}))}},"Add New Item"),Object(a.b)("div",{ref:i},t.map((function(e){return Object(a.b)("div",{key:e},e)}))))})))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"doc/dynamic-render.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---doc-dynamic-render-mdx-029a2289ccd99f4be18f.js.map